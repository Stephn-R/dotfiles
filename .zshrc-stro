# Friendly colors
red=$'\e[1;31m'
green=$'\e[1;32m'
yellow=$'\e[1;33m'
blue=$'\e[1;34m'
magenta=$'\e[1;35m'
cyan=$'\e[1;36m'
dim=$'\e[2m'
end=$'\e[0m'

# Fpath completions
fpath=(~/Documents/scripts/completions $fpath)

export CDK_DEFAULT_ACCOUNT=default
export CDK_DEFAULT_REGION=eu-west-1

# GO Path
export GOPATH=$HOME/go
[[ -d $GOPATH ]] && export PATH=$PATH:$GOPATH/bin

# Google Cloud
export GCP=/usr/local/google-cloud-sdk
[[ -d "$GCP/bin" ]] && export PATH=$PATH:$GCP/bin

# Custom bin
[[ -d ~/Documents/bin ]] && export PATH=$PATH:~/Documents/bin

# Custom scripts
[[ -d ~/Documents/scripts ]] && export PATH=$PATH:~/Documents/scripts

# Global
alias cls="clear"

# Git Aliases
alias c="git commit -m"
alias a="git add -A"
alias b="git branch --all"
alias p="git push"
alias u="git pull"
alias m="git merge"
alias ch="git checkout"
alias s="git status -s"
alias lg="git lg"
alias fp="git fetch --all --prune"
alias gss="git stash"
alias gsp="git stash pop"

# Kubectl Aliases
alias mk="minikube"
alias kak="kubectl apply -k"
alias kdk="kubectl delete -k"

# Lerna
# runs an npm script via lerna for a the current module
alias lr='lerna run --stream --scope $(node -p "require(\"./package.json\").name")'

# runs "npm run build" (build + test) for the current module
alias lb='lr build'
alias lt='lr test'

# runs "npm run watch" for the current module (recommended to run in a separate terminal session):
alias lw='lr watch'

# SSH
alias sgs="ssh_personal_github"
alias sgk="ssh_close"

# Begin SSH Agent for Github
function ssh_personal_github {
  if ! [ -f ~/.ssh/Stephn-R-Github ]; then
    printf "${red}Missing SSH file (~/.ssh/Stephn-R-Github)...${end}\n"
    return 1
  fi

  echo "Initializing new SSH agent..."
	eval $(ssh-agent -c | sed 's/^echo/#echo/')
	ssh-add ~/.ssh/Stephn-R-Github
}

function ssh_close {
	echo "Ending SSH Session..."
	eval $(ssh-agent -k | sed 's/^echo/#echo/' | sed 's/^unset/set -e/')
	echo "Done!"
}

function setenv {
	export "${1}"="${2}"
}

function gogo {
	export GOPATH=$(pwd)
}

function ddd {
	docker rmi $(docker images --filter 'dangling=true' -q --no-trunc)
}

function dotenv {
  filename=${1-".env"}
  printf "${yellow}Loading variables from ${filename}...${end}\n"

  while IFS='' read -r line || [[ -n "$line" ]]; do
  {
		name=$(cut -d '=' -f 1 <<< $line)
		value=$(cut -d '=' -f 2 <<< $line)
    echo $value
    eval $(echo export $name='$value')
  }  &> /dev/null
  done < "$filename"
}

# The next line updates PATH for the Google Cloud SDK.
if [ -f "$GCP/path.zsh.inc" ]; then source "$GCP/path.zsh.inc"; fi

# The next line enables shell command completion for gcloud.
if [ -f "$GCP/completion.zsh.inc" ]; then source "$GCP/completion.zsh.inc"; fi
